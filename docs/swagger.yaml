definitions:
  entities.AuthUser:
    properties:
      companyID:
        type: string
      role:
        $ref: '#/definitions/entities.Role'
      username:
        type: string
    type: object
  entities.LoginResponse:
    properties:
      authUser:
        $ref: '#/definitions/entities.AuthUser'
      token:
        $ref: '#/definitions/entities.Token'
    type: object
  entities.Role:
    properties:
      id:
        type: string
      name:
        type: string
      permissions:
        type: string
    type: object
  entities.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  managers.LoginParam:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  swagger.APIErrorResponse:
    properties:
      detail:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
  swagger.APIResponse:
    properties:
      data: {}
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.LoginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.LoginResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIErrorResponse'
      tags:
      - Auth
swagger: "2.0"
