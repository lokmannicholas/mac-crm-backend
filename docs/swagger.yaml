definitions:
  entities.Account:
    properties:
      display_name:
        type: string
      id:
        type: string
      last_login:
        type: integer
      name:
        type: string
      role:
        $ref: '#/definitions/entities.Role'
      status:
        default: Active
        enum:
        - Active
        - Disable
        type: string
      username:
        type: string
    type: object
  entities.CustomField:
    properties:
      custom_object:
        type: string
      field_name:
        $ref: '#/definitions/entities.MultiLangText'
      field_options:
        items:
          $ref: '#/definitions/entities.FieldOption'
        type: array
      field_type:
        enum:
        - string
        - multiple
        type: string
      id:
        type: string
      remarks:
        type: string
      status:
        default: Active
        enum:
        - Active
        - Disable
        type: string
      unique_key:
        type: string
    type: object
  entities.Customer:
    properties:
      address:
        type: string
      code:
        type: string
      first_name:
        type: string
      id:
        type: string
      id_no:
        type: string
      last_name:
        type: string
      meta:
        items:
          $ref: '#/definitions/entities.Meta'
        type: array
      other_name:
        type: string
      phone:
        type: string
      remarks:
        type: string
      status:
        default: Active
        enum:
        - Active
        - Disable
        type: string
      title:
        type: string
    type: object
  entities.FieldOption:
    properties:
      id:
        type: string
      name:
        $ref: '#/definitions/entities.MultiLangText'
    type: object
  entities.Meta:
    properties:
      data_type:
        type: string
      key:
        type: string
      val: {}
    type: object
  entities.MultiLangText:
    properties:
      ch:
        type: string
      en:
        type: string
      zh:
        type: string
    type: object
  entities.Role:
    properties:
      id:
        type: string
      name:
        type: string
      permissions:
        example: ACCOUNT:U;CUSTOMER:U;ROLE:U
        type: string
    type: object
  entities.Setting:
    properties:
      setting:
        type: string
      value:
        type: string
      version:
        type: integer
    type: object
  managers.AccountCreateParam:
    properties:
      display_name:
        type: string
      password:
        type: string
      role_id:
        type: string
      username:
        type: string
    required:
    - display_name
    - password
    - role_id
    - username
    type: object
  managers.AccountUpdateParam:
    properties:
      display_name:
        type: string
      password:
        type: string
      role_id:
        type: string
      status:
        type: string
      username:
        type: string
    required:
    - display_name
    - password
    - role_id
    - username
    type: object
  managers.ChangePasswordParam:
    properties:
      old_password:
        type: string
      password:
        type: string
    type: object
  managers.CustomFieldCreateParam:
    properties:
      custom_object:
        type: string
      field_name:
        $ref: '#/definitions/managers.MultiLangText'
      field_options:
        items:
          $ref: '#/definitions/managers.FieldOptionParam'
        type: array
      field_type:
        enum:
        - string
        - multiple
        type: string
      remarks:
        type: string
      unique_key:
        type: string
    type: object
  managers.CustomFieldUpdateParam:
    properties:
      field_name:
        $ref: '#/definitions/managers.MultiLangText'
      field_options:
        items:
          $ref: '#/definitions/managers.FieldOptionUpdate'
        type: array
      field_type:
        enum:
        - string
        - multiple
        type: string
      remarks:
        type: string
      status:
        enum:
        - Active
        - Disable
        type: string
      unique_key:
        type: string
    type: object
  managers.CustomerCreateParam:
    properties:
      address:
        type: string
      code:
        type: string
      first_name:
        type: string
      id_no:
        type: string
      last_name:
        type: string
      meta:
        additionalProperties: true
        type: object
      other_name:
        type: string
      phone:
        type: string
      remarks:
        type: string
      title:
        type: string
    type: object
  managers.CustomerUpdateParam:
    properties:
      address:
        type: string
      code:
        type: string
      first_name:
        type: string
      id_no:
        type: string
      last_name:
        type: string
      meta:
        additionalProperties: true
        type: object
      other_name:
        type: string
      phone:
        type: string
      remarks:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  managers.FieldOptionParam:
    properties:
      name:
        $ref: '#/definitions/managers.MultiLangText'
    type: object
  managers.FieldOptionUpdate:
    properties:
      action:
        enum:
        - CREATE
        - UPDATE
        - DELETE
        type: string
      id:
        type: string
      name:
        $ref: '#/definitions/managers.MultiLangText'
    required:
    - action
    type: object
  managers.LoginParam:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  managers.MultiLangText:
    properties:
      ch:
        type: string
      en:
        type: string
      zh:
        type: string
    type: object
  managers.RoleCreateParam:
    properties:
      name:
        type: string
      permissions:
        example: ACCOUNT:U;CUSTOMER:U;ROLE:U
        type: string
    type: object
  managers.RoleUpdateParam:
    properties:
      name:
        type: string
      permissions:
        example: ACCOUNT:U;CUSTOMER:U;ROLE:U
        type: string
    type: object
  managers.SettingSetParam:
    additionalProperties: true
    type: object
  swagger.APIForbiddenError:
    properties:
      message:
        type: string
    type: object
  swagger.APIInternalServerError:
    properties:
      detail:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
  swagger.APIResponse:
    properties:
      data: {}
      status:
        type: string
    type: object
  swagger.Account:
    properties:
      account:
        $ref: '#/definitions/entities.Account'
    type: object
  swagger.AccountList:
    properties:
      columns:
        items:
          type: string
        type: array
      data:
        items:
          $ref: '#/definitions/entities.Account'
        type: array
      total:
        type: integer
    type: object
  swagger.Accounts:
    properties:
      accounts:
        $ref: '#/definitions/swagger.AccountList'
    type: object
  swagger.AuthUser:
    properties:
      companyID:
        type: string
      role:
        $ref: '#/definitions/entities.Role'
      username:
        type: string
    type: object
  swagger.ChangePasswordResponse:
    properties:
      token:
        $ref: '#/definitions/swagger.Token'
    type: object
  swagger.CustomField:
    properties:
      custom_field:
        $ref: '#/definitions/entities.CustomField'
    type: object
  swagger.CustomFieldList:
    properties:
      columns:
        items:
          type: string
        type: array
      data:
        items:
          $ref: '#/definitions/entities.CustomField'
        type: array
      total:
        type: integer
    type: object
  swagger.CustomFields:
    properties:
      custom_fields:
        $ref: '#/definitions/swagger.CustomFieldList'
    type: object
  swagger.Customer:
    properties:
      customer:
        $ref: '#/definitions/entities.Customer'
    type: object
  swagger.CustomerList:
    properties:
      columns:
        items:
          type: string
        type: array
      data:
        items:
          $ref: '#/definitions/entities.Customer'
        type: array
      total:
        type: integer
    type: object
  swagger.Customers:
    properties:
      customers:
        $ref: '#/definitions/swagger.CustomerList'
    type: object
  swagger.LoginResponse:
    properties:
      authUser:
        $ref: '#/definitions/swagger.AuthUser'
      token:
        $ref: '#/definitions/swagger.Token'
    type: object
  swagger.Permissions:
    properties:
      permissions:
        items:
          type: string
        type: array
    type: object
  swagger.Role:
    properties:
      role:
        $ref: '#/definitions/entities.Role'
    type: object
  swagger.RoleList:
    properties:
      columns:
        items:
          type: string
        type: array
      data:
        items:
          $ref: '#/definitions/entities.Role'
        type: array
      total:
        type: integer
    type: object
  swagger.Roles:
    properties:
      roles:
        $ref: '#/definitions/swagger.RoleList'
    type: object
  swagger.SettingList:
    properties:
      columns:
        items:
          type: string
        type: array
      data:
        items:
          $ref: '#/definitions/entities.Setting'
        type: array
      total:
        type: integer
    type: object
  swagger.Settings:
    properties:
      settings:
        $ref: '#/definitions/swagger.SettingList'
    type: object
  swagger.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /account/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Account'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.AccountUpdateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Account'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
  /account/:id/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
  /account/:id/disable:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
  /account/:id/password/change:
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.ChangePasswordParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.ChangePasswordResponse'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
  /accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Accounts'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.AccountCreateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Account'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Account
  /auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Account'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.LoginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.LoginResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Auth
  /custom-field/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.CustomFieldUpdateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.CustomField'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Custom Field
  /custom-fields:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: query
        name: custom_object
        type: string
      - description: ' '
        in: query
        name: status
        type: string
      - description: ' '
        in: query
        name: page
        type: integer
      - description: ' '
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.CustomFields'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Custom Field
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.CustomFieldCreateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.CustomField'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Custom Field
  /customer/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Customer'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Customer
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.CustomerUpdateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Customer'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Customer
  /customers:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        enum:
        - eq
        - like
        in: query
        name: search_mode
        type: string
      - description: ' '
        in: query
        name: code
        type: string
      - description: ' '
        in: query
        name: phone
        type: string
      - description: ' '
        in: query
        name: id_no
        type: string
      - description: ' '
        in: query
        name: page
        type: integer
      - description: ' '
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Customers'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Customer
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.CustomerCreateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Customer'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Customer
  /permissions:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Permissions'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Permission
  /role/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: path
        name: id
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.RoleUpdateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Role'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Role
  /roles:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Roles'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Role
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.RoleCreateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Role'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Role
  /setting/general:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Settings'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Setting
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: header
        name: Authorization
        required: true
        type: string
      - description: ' '
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/managers.SettingSetParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/swagger.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/swagger.Settings'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/swagger.APIForbiddenError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/swagger.APIInternalServerError'
      tags:
      - Setting
swagger: "2.0"
